"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.applicationsController = exports.followController = exports.notificationsController = exports.connectionsController = exports.postController = exports.aiController = exports.adminController = exports.employeeController = exports.candidateController = exports.userController = void 0;
const adminController_1 = require("../controllers/admin/adminController");
const aiController_1 = require("../controllers/ai/aiController");
const applicationsController_1 = require("../controllers/applications/applicationsController");
const candidateController_1 = require("../controllers/candidate/candidateController");
const connectionsController_1 = require("../controllers/connections/connectionsController");
const employeeController_1 = require("../controllers/employee/employeeController");
const followController_1 = require("../controllers/follow/followController");
const notificationsController_1 = require("../controllers/notifications/notificationsController");
const postController_1 = require("../controllers/post/postController");
const userController_1 = require("../controllers/user/userController");
const voiceInterviewRepository_1 = require("../repositories/ai/voiceInterviewRepository");
const applicationRepository_1 = require("../repositories/applications/applicationRepository");
const candidateRepository_1 = require("../repositories/candidate/candidateRepository");
const commentRepository_1 = require("../repositories/comment/commentRepository");
const connectionsRepository_1 = require("../repositories/connections/connectionsRepository");
const employeeRepository_1 = require("../repositories/employee/employeeRepository");
const followRepository_1 = require("../repositories/follow/followRepository");
const interviewConversationRepository_1 = require("../repositories/interviewConversation/interviewConversationRepository");
const jobPostRepository_1 = require("../repositories/jobPost/jobPostRepository");
const likeRepository_1 = require("../repositories/like/likeRepository");
const notificationsRepository_1 = require("../repositories/notification/notificationsRepository");
const postRepository_1 = require("../repositories/post/postRepository");
const replyRepository_1 = require("../repositories/reply/replyRepository");
const saveCandidateRepository_1 = require("../repositories/saved/saveCandidateRepository/saveCandidateRepository");
const saveJobsRepository_1 = require("../repositories/saved/saveJobsRepository/saveJobsRepository");
const savePostRepository_1 = require("../repositories/saved/savePostRepository/savePostRepository");
const userRepository_1 = require("../repositories/user/userRepository");
const voiceInterviewFeedbackRepository_1 = require("../repositories/voiceInterviewFeedback/voiceInterviewFeedbackRepository");
const adminService_1 = require("../services/admin/adminService");
const aiService_1 = require("../services/ai/aiService");
const applicationsService_1 = require("../services/applications/applicationsService");
const candidateService_1 = require("../services/candidate/candidateService");
const commentService_1 = require("../services/comment/commentService");
const connectionsServices_1 = require("../services/connections/connectionsServices");
const employeeService_1 = require("../services/employee/employeeService");
const followService_1 = require("../services/follow/followService");
const likeService_1 = require("../services/like/likeService");
const notificationsServices_1 = require("../services/notifications/notificationsServices");
const postService_1 = require("../services/post/postService");
const replyService_1 = require("../services/reply/replyService");
const userService_1 = require("../services/user/userService");
const adminRepository_1 = require("../repositories/admin/adminRepository");
const aiRepository_1 = require("../repositories/ai/aiRepository");
const messageRepository_1 = require("../repositories/message/messageRepository");
// Repositories
const userRepository = new userRepository_1.UserRepository();
const candidateRepository = new candidateRepository_1.CandidateRepository();
const employeeRepository = new employeeRepository_1.EmployeeRepository();
const notificationsRepository = new notificationsRepository_1.NotificationsRepository();
const connectionsRepository = new connectionsRepository_1.ConnectionsRepository();
const likeRepository = new likeRepository_1.LikeRepository();
const commentRepository = new commentRepository_1.CommentRepository();
const replyRepository = new replyRepository_1.ReplyRepository();
const postRepository = new postRepository_1.PostRepository();
const applicationsRepository = new applicationRepository_1.ApplicationsRepository();
const jobRepository = new jobPostRepository_1.JobRepository();
const followRepository = new followRepository_1.FollowRepository();
const adminRepository = new adminRepository_1.AdminRepository();
const voiceInterviewRepository = new voiceInterviewRepository_1.VoiceInterviewRepository();
const interviewConversationRepository = new interviewConversationRepository_1.InterviewConversationRepository();
const voiceInterviewFeedbackRepository = new voiceInterviewFeedbackRepository_1.VoiceInterviewFeedbackRepository();
const aiRepository = new aiRepository_1.AiRepository();
const savedPostsRepository = new savePostRepository_1.SavePostsRepository();
const savedcandidateRepository = new saveCandidateRepository_1.SaveCandidateRepository();
const savedJobsRepository = new saveJobsRepository_1.SaveJobsRepository();
const messageRepository = new messageRepository_1.MessageRepository();
// Services
const userService = new userService_1.UserService(userRepository, savedcandidateRepository, candidateRepository);
const notificationsService = new notificationsServices_1.NotificationsService(notificationsRepository, employeeRepository);
const connectionsService = new connectionsServices_1.ConnectionsService(connectionsRepository, userRepository, notificationsRepository);
const likeService = new likeService_1.LikeService(likeRepository);
const commentService = new commentService_1.CommentService(commentRepository);
const replyService = new replyService_1.ReplyService(replyRepository);
const postService = new postService_1.PostService(postRepository, userRepository, likeRepository, notificationsRepository, commentRepository, replyRepository, savedPostsRepository);
const employeeService = new employeeService_1.EmployeeService(employeeRepository, userRepository, jobRepository, applicationsRepository, savedJobsRepository, savedcandidateRepository, postRepository);
const applicationsService = new applicationsService_1.ApplicationsService(candidateRepository, userRepository, applicationsRepository, jobRepository);
const candidateService = new candidateService_1.CandidateService(candidateRepository, userRepository, connectionsRepository, savedJobsRepository, jobRepository, savedcandidateRepository, applicationsRepository, messageRepository);
const followService = new followService_1.FollowService(followRepository, userRepository, notificationsRepository, employeeRepository);
const adminService = new adminService_1.AdminService(userRepository, jobRepository, postRepository);
const aiService = new aiService_1.AiService(aiRepository, userRepository, voiceInterviewRepository, interviewConversationRepository, voiceInterviewFeedbackRepository, candidateRepository, employeeRepository);
// Controllers
const userController = new userController_1.UserController(userService);
exports.userController = userController;
const notificationsController = new notificationsController_1.NotificationsController(notificationsService);
exports.notificationsController = notificationsController;
const connectionsController = new connectionsController_1.ConnectionsController(connectionsService);
exports.connectionsController = connectionsController;
const postController = new postController_1.PostController(postService);
exports.postController = postController;
const employeeController = new employeeController_1.EmployeeController(employeeService);
exports.employeeController = employeeController;
const applicationsController = new applicationsController_1.ApplicationsController(applicationsService);
exports.applicationsController = applicationsController;
const candidateController = new candidateController_1.CandidateController(candidateService);
exports.candidateController = candidateController;
const followController = new followController_1.FollowController(followService);
exports.followController = followController;
const adminController = new adminController_1.AdminController(adminService, userService, postService);
exports.adminController = adminController;
const aiController = new aiController_1.AiController(aiService);
exports.aiController = aiController;
